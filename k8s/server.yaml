apiVersion: apps/v1
kind: Deployment
#kind: StatefulSet

metadata:
  name: k8s-kms-plugin-server
  #  namespace: kube-system
  labels:
    app.kubernetes.io/name: k8s-kms-plugin-server
spec:
#  serviceName: k8s-kms-plugin-server
  selector:
    matchLabels:
      app.kubernetes.io/name: k8s-kms-plugin-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: k8s-kms-plugin-server
    spec:
      volumes:
        - name: certstore
          emptyDir: {}
        - name: ca
          hostPath:
            path: /etc/
        - name: socket
          hostPath:
            path: /tmp/run
      initContainers:
        - name: bootstrap
          image: "gcr.io/thalescpl-io/k8s-kms-plugin/server"
          volumeMounts:
            - mountPath: /certs/
              name: certstore

          env:
            - name: P11_LIB
              value: /usr/lib64/libsofthsm2.so
            - name: P11_LABEL
              value: default
            - name: P11_PIN
              value: changeme
          args:
            - bootstrap
      containers:
#        - name: est-server
#          image: "gcr.io/thalescpl-io/k8s-kms-plugin/est"
#          imagePullPolicy: IfNotPresent
#          env:
#            - name: P11_LIB
#              value: /usr/lib64/libsofthsm2.so
#            - name: P11_LABEL
#              value: default
#            - name: P11_PIN
#              value: changeme
#          ports:
#            - containerPort: 443
#              protocol: TCP
#              name: est
#          volumeMounts:
#            - mountPath: /certs/
#              name: certstore
#          args:
#            - --tls-ca=/certs/ca.crt
#            - --tls-certificate=/certs/tls.crt
#            - --tls-key=/certs/tls.key
#            - --est-cert=/certs/ca.crt
#            - --tls-port=443
#            - --tls-host=0.0.0.0
#            - --allow-any
#          readinessProbe:
#            tcpSocket:
#              port: 443
        - name: k8s-kms-plugin
          image: "gcr.io/thalescpl-io/k8s-kms-plugin/server"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /certs/
              name: certstore
            - mountPath: /tmp/run
              name: socket
          env:
            - name: P11_LIB
              value: /usr/lib64/libsofthsm2.so
            - name: P11_LABEL
              value: default
            - name: P11_PIN
              value: changeme
          args:
            - serve
            - --socket=/tmp/run/socket
        - name: test-client
          image: "gcr.io/thalescpl-io/k8s-kms-plugin/server"
          imagePullPolicy: IfNotPresent
          args:
            - test
            - --socket=/tmp/run/socket
---
kind: Service
apiVersion: v1
metadata:
  name: k8s-kms-plugin-server
  #  namespace: kube-system
  labels:
    app.kubernetes.io/name: k8s-kms-plugin
spec:
  ports:
    - port: 443
      name: est
      targetPort: 443
    - port: 31400
      name: grpc
      targetPort: 31400
  selector:
    app.kubernetes.io/name:  k8s-kms-plugin-server